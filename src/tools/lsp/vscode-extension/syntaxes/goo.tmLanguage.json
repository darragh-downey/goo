{
  "name": "Goo",
  "scopeName": "source.goo",
  "fileTypes": ["goo"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#functions" },
    { "include": "#constants" },
    { "include": "#variables" },
    { "include": "#operators" },
    { "include": "#numbers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.goo",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.goo",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.goo",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.goo",
              "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}|.)"
            }
          ]
        },
        {
          "name": "string.quoted.single.goo",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.goo",
              "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}|.)"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.goo",
          "match": "\\b(if|else|for|while|loop|break|continue|return|match|case|defer|goto|import|from|as)\\b"
        },
        {
          "name": "keyword.declaration.goo",
          "match": "\\b(fn|struct|enum|interface|impl|trait|type|let|const|var|mod|pub|static)\\b"
        },
        {
          "name": "keyword.operator.goo",
          "match": "\\b(and|or|not|in|is)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.goo",
          "match": "\\b(i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|bool|char|str|string|void)\\b"
        },
        {
          "name": "entity.name.type.goo",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.goo",
          "match": "\\b([a-z][A-Za-z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "entity.name.function.declaration.goo",
          "match": "\\bfn\\s+([a-z][A-Za-z0-9_]*)"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.goo",
          "match": "\\b(true|false|nil)\\b"
        },
        {
          "name": "constant.other.goo",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.goo",
          "match": "\\b[a-z][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.goo",
          "match": "=|\\+=|-=|\\*=|/=|%=|\\^=|&=|\\|=|<<=|>>="
        },
        {
          "name": "keyword.operator.arithmetic.goo",
          "match": "\\+|\\-|\\*|/|%|\\^|&|\\||<<|>>|~"
        },
        {
          "name": "keyword.operator.logical.goo",
          "match": "!|&&|\\|\\||==|!=|<|>|<=|>="
        },
        {
          "name": "keyword.operator.range.goo",
          "match": "\\.\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.decimal.goo",
          "match": "\\b[0-9][0-9_]*\\b"
        },
        {
          "name": "constant.numeric.integer.hexadecimal.goo",
          "match": "\\b0x[0-9a-fA-F][0-9a-fA-F_]*\\b"
        },
        {
          "name": "constant.numeric.integer.binary.goo",
          "match": "\\b0b[01][01_]*\\b"
        },
        {
          "name": "constant.numeric.integer.octal.goo",
          "match": "\\b0o[0-7][0-7_]*\\b"
        },
        {
          "name": "constant.numeric.float.goo",
          "match": "\\b[0-9][0-9_]*\\.[0-9][0-9_]*([eE][+-]?[0-9][0-9_]*)?\\b"
        }
      ]
    }
  }
} 