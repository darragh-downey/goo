const std = @import("std"); const Node = struct { node_type: NodeType, }; const NodeType = enum { declaration, expression, }; const Block = struct { statements: []const u8, }; const ComptimeDecl = struct { name: []const u8, body: Block, }; const DeclarationType = union(enum) { comptime: ComptimeDecl, function: []const u8, }; const Declaration = struct { node: Node, decl_type: DeclarationType, }; pub fn main() !void { var node = Node{ .node_type = .declaration }; var body = Block{ .statements = "test" }; var comptime_decl = ComptimeDecl{ .name = "test", .body = body }; var decl_type = DeclarationType{ .comptime = comptime_decl }; var decl = Declaration{ .node = node, .decl_type = decl_type }; std.debug.print("Declaration: {any}\n", .{decl}); }
